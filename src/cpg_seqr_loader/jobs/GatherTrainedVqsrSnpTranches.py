from typing import TYPE_CHECKING

from cpg_flow import resources
from cpg_utils import Path, config, hail_batch

from cpg_seqr_loader import utils

if TYPE_CHECKING:
    from hailtop.batch.job import BashJob


def gather_tranches(
    manifest_file: Path,
    temp_path: Path,
    output_path: Path,
    job_attrs: dict[str, str],
) -> 'BashJob':
    """Gather the trained SNP tranches generated by the previous job."""

    vcf_resources = utils.get_all_fragments_from_manifest(manifest_file)
    snp_tranche_paths = [
        hail_batch.get_batch().read_input(str(temp_path / f'snp_{i}.tranches')) for i in range(len(vcf_resources))
    ]

    job = hail_batch.get_batch().new_job('GatherTrainedVqsrSnpTranches', job_attrs | {'tool': 'gatk GatherTranches'})
    job.image(config.config_retrieve(['images', 'gatk']))
    res = resources.STANDARD.set_resources(
        job,
        ncpu=2,
        storage_gb=utils.SNPS_GATHER_DISC_SIZE,
    )

    inputs_cmdl = ' '.join([f'--input {t}' for t in snp_tranche_paths])
    job.command(
        f"""set -euo pipefail
    gatk --java-options "{res.java_mem_options()}" \\
      GatherTranches \\
      --mode SNP \\
      {inputs_cmdl} \\
      --output {job.out_tranches}""",
    )

    hail_batch.get_batch().write_output(job.out_tranches, output_path)
    return job
